[tool.poetry]
name = "mltoolbox"
version = "0.0.0"
description = "A machine learning toolbox"
authors = ["Parici75 <benjamin.roland@hotmail.fr>"]
license = "BSD-3-Clause"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
pydantic = "^2.4.2"
numpy = "^1.26.0"
pandas = "^2.1.1"
scikit-learn = "^1.3.1"
matplotlib = "^3.8.0"
imbalanced-learn = "^0.11.0"
pymodules = {git = "https://github.com/Parici75/pymodules.git"}
tensorflow = {version = "^2.14.0", optional = true}
typing-extensions = "^4.8.0"
opentsne = "^1.0.0"

[tool.poetry.extras]
tensorflow = ["tensorflow"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
mypy = "^1.10.0"
ruff = "^0.4.3"
black = "^24.4.2"
isort = "^5.12.0"
pyupgrade = "^3.13.0"
pre-commit = "^3.4.0"
pyclean = "^2.7.5"


[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
pattern  = "^(?P<base>\\d+\\.\\d+\\.\\d+)(-?((?P<stage>[a-zA-Z]+)\\.?(?P<revision>\\d+)?))?"


[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

## Tools
[tool.black]
target-version = ['py311']
line_length = 100
preview = true

[tool.ruff]
line-length = 100
target-version = "py311"
exclude = ["tests"]
[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "UP", # pyupgrade
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "S", # flake8-bandit
    "A", # flake8-builtins
    "INP", # flake8-no-pep420
    "PIE", # flake8-pie
    "PL", # pylint
]
ignore = [
        "E501", # line too long
        "PLR0913"] # too many arguments

[tool.isort]
profile = "black"
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"

[tool.mypy]
exclude = ["tests"]
python_version = 3.11

# Strict guidelines taken from https://github.com/pytorch/pytorch/blob/master/mypy-strict.ini
cache_dir = ".mypy_cache/strict"
strict_optional = true
hide_error_codes = false
show_column_numbers = true
warn_no_return = true
disallow_any_unimported = false

# Across versions of mypy, the flags toggled by --strict vary.  To ensure
# we have reproducible type check, we instead manually specify the flags
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = false
implicit_reexport = false
strict_equality = true

# mypy per-module options
[[tool.mypy.overrides]]
module = ["numpy.*", "scipy.*", "sklearn.*", "openTSNE.*", "joblib.*", "imblearn.*", "pandas.*", "seaborn.*", "plotly.*", "pymodules.*"]
ignore_missing_imports = true

# Tests
[tool.pytest.ini_options]
log_cli = true
log_cli_level = 10
testpaths = ["tests"]
